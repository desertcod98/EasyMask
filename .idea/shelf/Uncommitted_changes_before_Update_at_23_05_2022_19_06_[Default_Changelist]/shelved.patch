Index: app/src/main/java/it/volta/ts/easymask/activities/QrCaptureActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.volta.ts.easymask.activities;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.zxing.integration.android.IntentIntegrator;\r\nimport com.google.zxing.integration.android.IntentResult;\r\n\r\nimport it.volta.ts.easymask.R;\r\n\r\n\r\n// implements onClickListener for the onclick behaviour of button\r\npublic class QrCaptureActivity extends AppCompatActivity implements View.OnClickListener {\r\n    Button scanBtn;\r\n    TextView messageText;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_qr_capture);\r\n        scanBtn = findViewById(R.id.scanBtn);\r\n        messageText = findViewById(R.id.textContent);\r\n        scanBtn.setOnClickListener(this);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        IntentIntegrator intentIntegrator = new IntentIntegrator(this);\r\n        intentIntegrator.setCaptureActivity(AnyOrientationCaptureActivity.class);\r\n        intentIntegrator.setPrompt(\"Scan a barcode or a QR Code\");\r\n        intentIntegrator.setOrientationLocked(false);\r\n        intentIntegrator.initiateScan();\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        IntentResult intentResult = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);\r\n        if (intentResult != null) {\r\n            if (intentResult.getContents() == null) {\r\n                Toast.makeText(getBaseContext(), \"Scan cancelled\", Toast.LENGTH_SHORT).show();\r\n            } else {\r\n                messageText.setText(intentResult.getContents());\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/activities/QrCaptureActivity.java b/app/src/main/java/it/volta/ts/easymask/activities/QrCaptureActivity.java
--- a/app/src/main/java/it/volta/ts/easymask/activities/QrCaptureActivity.java	(revision acccee101acc84474f4c7c2d65bb218989252c8b)
+++ b/app/src/main/java/it/volta/ts/easymask/activities/QrCaptureActivity.java	(date 1653324212550)
@@ -15,7 +15,6 @@
 import it.volta.ts.easymask.R;
 
 
-// implements onClickListener for the onclick behaviour of button
 public class QrCaptureActivity extends AppCompatActivity implements View.OnClickListener {
     Button scanBtn;
     TextView messageText;
Index: app/src/main/java/it/volta/ts/easymask/networking/DownloadManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/networking/DownloadManager.java b/app/src/main/java/it/volta/ts/easymask/networking/DownloadManager.java
new file mode 100644
--- /dev/null	(date 1653324671543)
+++ b/app/src/main/java/it/volta/ts/easymask/networking/DownloadManager.java	(date 1653324671543)
@@ -0,0 +1,47 @@
+package it.volta.ts.easymask.networking;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.nio.channels.Channels;
+import java.nio.channels.FileChannel;
+import java.nio.channels.ReadableByteChannel;
+
+public class DownloadManager {
+    private ReadableByteChannel urlByteChannel;
+    private String url;
+    private final String urlKeyword = "code=";
+    private final String imgExtension = ".png";
+
+    public int setUrlByteChannel(String url){
+        try {
+            urlByteChannel = Channels.newChannel(new URL(url).openStream());
+            this.url = url;
+            return 0;
+        } catch (IOException e) {
+            return -1;
+        }
+    }
+
+    public int saveImgToFile(){
+        String filename = (url.substring(url.indexOf(urlKeyword)+urlKeyword.length()))+imgExtension;
+        FileOutputStream fileOutputStream = null;
+        try {
+            fileOutputStream = new FileOutputStream(new File(filename));
+        } catch (FileNotFoundException e) {
+            e.printStackTrace();
+        }
+        FileChannel fileChannel = fileOutputStream.getChannel();
+        try {
+            fileOutputStream.getChannel()
+                    .transferFrom(urlByteChannel, 0, Long.MAX_VALUE);
+        } catch (IOException e) {
+            e.printStackTrace();
+            return -1;
+        }
+        return 0;
+    }
+}

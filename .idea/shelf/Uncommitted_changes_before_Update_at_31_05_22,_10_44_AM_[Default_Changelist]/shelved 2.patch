Index: app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.volta.ts.easymask.activities;\n\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.os.Bundle;\nimport android.view.HapticFeedbackConstants;\nimport android.view.View;\nimport android.widget.ImageView;\nimport android.widget.RelativeLayout;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.target.CustomTarget;\nimport com.bumptech.glide.request.transition.Transition;\n\nimport it.volta.ts.easymask.R;\nimport it.volta.ts.easymask.tools.ToolSelector;\nimport it.volta.ts.easymask.util.GraphicUtil;\nimport it.volta.ts.easymask.widgets.MaskEraser;\nimport it.volta.ts.easymask.widgets.MaskImage;\n\npublic class MaskActivity extends AppCompatActivity\n{\n    private ImageView downloadedImg, brush, eraser, btnUpload;\n    private MaskImage maskImage;\n    private MaskEraser maskEraser;\n    RelativeLayout imageLayout;\n    private int screenHeight;\n    private int screenWidth;\n    private String url;\n    private int maxHeight, maxWidth;\n    private int imgHeight, imgWidth;\n    private int newHeight, newWidth;\n\n    private final double maxHeightRatio = 0.6;\n    private final double maxWidthRatio  = 0.9;\n    @Override\n    protected void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_mask);\n\n        screenHeight = GraphicUtil.getScreenHeight(this);\n        screenWidth  = GraphicUtil.getScreenWidth(this);\n        maxHeight    = (int)(screenHeight * maxHeightRatio);\n        maxWidth     = (int)(screenWidth  * maxWidthRatio );\n\n        Bundle b = getIntent().getExtras();\n        url = b.getString(\"url\");\n        downloadedImg = findViewById(R.id.imgSlot);\n        loadImage(downloadedImg, url);\n\n        imageLayout = findViewById(R.id.image_layout);\n\n        maskImage = findViewById(R.id.imgMask);\n        maskImage.setOnMaskTouch(onMaskTouch);\n\n        maskEraser = findViewById(R.id.imgEraser);\n        maskEraser.setOnMaskTouch(onMaskEraserTouch);\n        maskEraser.setMaskImage(maskImage);\n\n\n        brush     = findViewById(R.id.brush );\n        eraser    = findViewById(R.id.eraser);\n        btnUpload = findViewById(R.id.btnUp );\n\n        brush.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                ToolSelector.toolState = 1;\n                maskEraser.setEnabled(false);\n                maskImage.setEnabled(true);\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n            }\n        });\n\n        eraser.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                ToolSelector.toolState = 0;\n                maskEraser.setEnabled(true);\n                maskImage.setEnabled(false);\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n            }\n        });\n\n        btnUpload.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n            }\n        });\n    }\n\n    private void setDimens(int imgWidth, int imgHeight)\n    {\n        newHeight = imgHeight;\n        newWidth  = imgWidth;\n        float ratio;\n\n        if (imgWidth > imgHeight) {\n            ratio = (float) maxWidth / (float) imgWidth;\n\n        } else if (imgHeight > imgWidth){\n            ratio = (float) maxHeight / (float) imgHeight;\n        }else{\n            if(maxWidth>maxWidth){\n                ratio = (float) maxHeight / (float) imgHeight;\n            }\n            else{\n                ratio = (float) maxWidth / (float) imgWidth;\n            }\n        }\n        newWidth  = (int)((float) imgWidth  * ratio);\n        newHeight = (int)((float) imgHeight * ratio);\n\n        GraphicUtil.applySize(imageLayout, newWidth, newHeight);\n    }\n\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n\n        int width  = downloadedImg.getWidth();\n        int height = downloadedImg.getHeight();\n    }\n\n    private void loadImage(ImageView view, String url)\n    {\n        Glide.with(this)\n                .asBitmap()\n                .load(url)\n                .into(new CustomTarget<Bitmap>() {\n                    @Override\n                    public void onResourceReady(Bitmap bitmap, Transition<? super Bitmap> transition) {\n                        imgWidth = bitmap.getWidth();\n                        imgHeight = bitmap.getHeight();\n                        view.setImageBitmap(bitmap);\n\n                        setDimens(imgWidth,imgHeight);\n                        Bitmap transBmp = Bitmap.createBitmap(imgWidth,imgHeight,Bitmap.Config.ARGB_8888);\n                        BitmapDrawable drawable = new BitmapDrawable(getResources(), bitmap);\n                        drawable.setAlpha(100);\n                        maskImage.setImageDrawable(drawable);\n                    }\n\n                    @Override\n                    public void onLoadCleared(@Nullable Drawable placeholder) {\n                    }\n                });\n    }\n\n    //-----------------------------------------------------------------------------------------\n\n\n    MaskEraser.OnMaskTouch onMaskEraserTouch = new MaskEraser.OnMaskTouch() {\n        @Override\n        public void onPoint(float x, float y) {\n\n        }\n    };\n\n\n    MaskImage.OnMaskTouch onMaskTouch = new MaskImage.OnMaskTouch()\n    {\n        @Override\n        public void onPoint(float x, float y) {\n            System.out.println(x + \", \" + y);\n        }\n    };\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java b/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java
--- a/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java	(revision 38dba19764769eb03ca6f124d0ef02c23b9ccc82)
+++ b/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java	(date 1653985510767)
@@ -22,9 +22,8 @@
 import it.volta.ts.easymask.widgets.MaskEraser;
 import it.volta.ts.easymask.widgets.MaskImage;
 
-public class MaskActivity extends AppCompatActivity
-{
-    private ImageView downloadedImg, brush, eraser, btnUpload;
+public class MaskActivity extends AppCompatActivity {
+    private ImageView downloadedImg, brush, eraser, undo, redo, btnUpload;
     private MaskImage maskImage;
     private MaskEraser maskEraser;
     RelativeLayout imageLayout;
@@ -36,17 +35,17 @@
     private int newHeight, newWidth;
 
     private final double maxHeightRatio = 0.6;
-    private final double maxWidthRatio  = 0.9;
+    private final double maxWidthRatio = 0.9;
+
     @Override
-    protected void onCreate(Bundle savedInstanceState)
-    {
+    protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_mask);
 
         screenHeight = GraphicUtil.getScreenHeight(this);
-        screenWidth  = GraphicUtil.getScreenWidth(this);
-        maxHeight    = (int)(screenHeight * maxHeightRatio);
-        maxWidth     = (int)(screenWidth  * maxWidthRatio );
+        screenWidth = GraphicUtil.getScreenWidth(this);
+        maxHeight = (int) (screenHeight * maxHeightRatio);
+        maxWidth = (int) (screenWidth * maxWidthRatio);
 
         Bundle b = getIntent().getExtras();
         url = b.getString("url");
@@ -62,10 +61,11 @@
         maskEraser.setOnMaskTouch(onMaskEraserTouch);
         maskEraser.setMaskImage(maskImage);
 
-
-        brush     = findViewById(R.id.brush );
-        eraser    = findViewById(R.id.eraser);
-        btnUpload = findViewById(R.id.btnUp );
+        brush = findViewById(R.id.brush);
+        eraser = findViewById(R.id.eraser);
+        undo = findViewById(R.id.undo);
+        redo = findViewById(R.id.redo);
+        btnUpload = findViewById(R.id.btnUp);
 
         brush.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -86,6 +86,24 @@
                 view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
             }
         });
+
+        undo.setOnClickListener(view -> {
+            if (ToolSelector.toolState == 1) {
+                maskImage.undo();
+            } else {
+                maskEraser.undo();
+            }
+            view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
+        });
+
+        redo.setOnClickListener(view -> {
+            if (ToolSelector.toolState == 1) {
+                maskImage.redo();
+            } else {
+                maskEraser.redo();
+            }
+            view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
+        });
 
         btnUpload.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -95,27 +113,25 @@
         });
     }
 
-    private void setDimens(int imgWidth, int imgHeight)
-    {
+    private void setDimens(int imgWidth, int imgHeight) {
         newHeight = imgHeight;
-        newWidth  = imgWidth;
+        newWidth = imgWidth;
         float ratio;
 
         if (imgWidth > imgHeight) {
             ratio = (float) maxWidth / (float) imgWidth;
 
-        } else if (imgHeight > imgWidth){
+        } else if (imgHeight > imgWidth) {
             ratio = (float) maxHeight / (float) imgHeight;
-        }else{
-            if(maxWidth>maxWidth){
+        } else {
+            if (maxWidth > maxWidth) {
                 ratio = (float) maxHeight / (float) imgHeight;
-            }
-            else{
+            } else {
                 ratio = (float) maxWidth / (float) imgWidth;
             }
         }
-        newWidth  = (int)((float) imgWidth  * ratio);
-        newHeight = (int)((float) imgHeight * ratio);
+        newWidth = (int) ((float) imgWidth * ratio);
+        newHeight = (int) ((float) imgHeight * ratio);
 
         GraphicUtil.applySize(imageLayout, newWidth, newHeight);
     }
@@ -125,12 +141,11 @@
     protected void onResume() {
         super.onResume();
 
-        int width  = downloadedImg.getWidth();
+        int width = downloadedImg.getWidth();
         int height = downloadedImg.getHeight();
     }
 
-    private void loadImage(ImageView view, String url)
-    {
+    private void loadImage(ImageView view, String url) {
         Glide.with(this)
                 .asBitmap()
                 .load(url)
@@ -141,8 +156,8 @@
                         imgHeight = bitmap.getHeight();
                         view.setImageBitmap(bitmap);
 
-                        setDimens(imgWidth,imgHeight);
-                        Bitmap transBmp = Bitmap.createBitmap(imgWidth,imgHeight,Bitmap.Config.ARGB_8888);
+                        setDimens(imgWidth, imgHeight);
+                        Bitmap transBmp = Bitmap.createBitmap(imgWidth, imgHeight, Bitmap.Config.ARGB_8888);
                         BitmapDrawable drawable = new BitmapDrawable(getResources(), bitmap);
                         drawable.setAlpha(100);
                         maskImage.setImageDrawable(drawable);
@@ -165,8 +180,7 @@
     };
 
 
-    MaskImage.OnMaskTouch onMaskTouch = new MaskImage.OnMaskTouch()
-    {
+    MaskImage.OnMaskTouch onMaskTouch = new MaskImage.OnMaskTouch() {
         @Override
         public void onPoint(float x, float y) {
             System.out.println(x + ", " + y);
@@ -174,5 +188,4 @@
     };
 
 
-
 }
Index: app/src/main/java/it/volta/ts/easymask/widgets/MaskEraser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.volta.ts.easymask.widgets;\n\nimport android.content.Context;\nimport android.graphics.Bitmap;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Paint;\nimport android.graphics.PorterDuff;\nimport android.graphics.PorterDuffXfermode;\nimport android.util.AttributeSet;\nimport android.view.MotionEvent;\nimport android.view.View;\n\nimport androidx.annotation.ColorInt;\nimport androidx.annotation.Nullable;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport it.volta.ts.easymask.obj.FPoint;\nimport it.volta.ts.easymask.tools.ToolSelector;\n\npublic class MaskEraser extends androidx.appcompat.widget.AppCompatImageView\n{\n\n    private MaskImage maskImage;\n\n    @ColorInt\n    int eraseColor = Color.WHITE;\n    int stroke;\n\n    private OnMaskTouch onMaskTouch;\n\n    List<List<FPoint>> points;\n    List<FPoint>       track;\n\n    int width, height;\n    float fromX, fromY, toX, toY;\n    Paint paint;\n\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)\n    {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        this.setDrawingCacheEnabled(true);\n        width  = MeasureSpec.getSize(widthMeasureSpec );\n        height = MeasureSpec.getSize(heightMeasureSpec);\n        stroke = width * 5 / 100;\n        paint.setStrokeWidth(stroke);\n    }\n\n    OnTouchListener onTouch = new OnTouchListener() {\n        @Override\n        public boolean onTouch(View view, MotionEvent event)\n        {\n            float x = event.getX();\n            float y = event.getY();\n\n            switch(event.getAction())\n            {\n                case MotionEvent.ACTION_DOWN:\n                    fromX = x;\n                    fromY = y;\n                    track = new ArrayList<>();\n\n                    points.add(track);\n\n\n                    if (ToolSelector.toolState == 1)\n                    {\n                        track.add(new FPoint(x,y, false));\n                    } else {\n                        track.add(new FPoint(x,y, true));\n                    }\n                    if (onMaskTouch != null)\n                        onMaskTouch.onPoint(x,y);\n                    break;\n                case MotionEvent.ACTION_UP:\n                    if (ToolSelector.toolState != 1)\n                    {\n\n                    }\n                    //show();\n                    break;\n                case MotionEvent.ACTION_MOVE:\n                    toX = x;\n                    toY = y;\n\n                    fromX = x;\n                    fromY = y;\n                    if (ToolSelector.toolState == 1)\n                    {\n                        track.add(new FPoint(x,y, false));\n                    } else {\n                        track.add(new FPoint(x,y, true));\n                    }\n                    if (onMaskTouch != null)\n                        onMaskTouch.onPoint(x,y);\n\n                    break;\n            }\n\n            MaskEraser.this.invalidate();\n            return true;\n        }\n    };\n\n\n    @Override\n    protected void onDraw(Canvas canvas)\n    {\n        //super.onDraw(canvas);\n\n        if (points != null) {\n            for (List<FPoint> track : points) {\n                if (track.size() > 1) {\n                    for (int idx = 1; idx < track.size(); idx++) {\n                        if (track.get(idx - 1).eraser || track.get(idx).eraser) {\n\n                            paint.setColor(eraseColor);\n                            canvas.drawLine(track.get(idx - 1).x, track.get(idx - 1).y,\n                                    track.get(idx).x, track.get(idx).y,\n                                    paint);\n                        }\n                    }\n                } else {\n\n                }\n            }\n\n//            try {\n//                maskImage.erase(this.getDrawingCache());\n//            } catch (Exception e) {\n//                System.out.println(\"eccezione\");\n//            }\n        }\n    }\n\n    //----------------------------------------------------------------------------------------------\n\n    public void setOnMaskTouch(OnMaskTouch onMaskTouch) {\n        this.onMaskTouch = onMaskTouch;\n    }\n\n    public interface OnMaskTouch\n    {\n        void onPoint(float x, float y);\n    }\n\n    //----------------------------------------------------------------------------------------------\n\n    public MaskEraser(Context context) {\n        super(context);\n        init();\n    }\n\n    public MaskEraser(Context context, @Nullable AttributeSet attrs) {\n        super(context, attrs);\n        init();\n    }\n\n    public MaskEraser(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init();\n    }\n\n    private void init()\n    {\n        points = new ArrayList<>();\n\n        paint = new Paint();\n\n        paint.setAntiAlias(true);\n        paint.setStrokeCap(Paint.Cap.ROUND);\n\n        setBackgroundColor(0x00000000);\n        setOnTouchListener(onTouch);\n    }\n\n    public void setMaskImage(MaskImage maskImage) {\n        this.maskImage = maskImage;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/widgets/MaskEraser.java b/app/src/main/java/it/volta/ts/easymask/widgets/MaskEraser.java
--- a/app/src/main/java/it/volta/ts/easymask/widgets/MaskEraser.java	(revision 38dba19764769eb03ca6f124d0ef02c23b9ccc82)
+++ b/app/src/main/java/it/volta/ts/easymask/widgets/MaskEraser.java	(date 1653985373393)
@@ -33,6 +33,8 @@
 
     List<List<FPoint>> points;
     List<FPoint>       track;
+    int position = 0;
+    List<FPoint>       trackToRedo;
 
     int width, height;
     float fromX, fromY, toX, toY;
@@ -65,7 +67,7 @@
                     track = new ArrayList<>();
 
                     points.add(track);
-
+                    position++;
 
                     if (ToolSelector.toolState == 1)
                     {
@@ -181,4 +183,21 @@
     public void setMaskImage(MaskImage maskImage) {
         this.maskImage = maskImage;
     }
+
+    //-----------------------------------------------------------------------------------------
+
+    public void undo () {
+        if (position > 0) {
+            trackToRedo = points.get(position-1);
+            points.remove(position-1);
+            position--;
+            MaskEraser.this.invalidate();
+        }
+    }
+
+    public void redo () {
+        points.add(trackToRedo);
+        position++;
+        MaskEraser.this.invalidate();
+    }
 }
Index: app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.volta.ts.easymask.widgets;\n\nimport android.content.Context;\nimport android.graphics.Bitmap;\nimport android.graphics.Canvas;\nimport android.graphics.Paint;\nimport android.graphics.PorterDuff;\nimport android.graphics.PorterDuffXfermode;\nimport android.util.AttributeSet;\nimport android.view.MotionEvent;\nimport android.view.View;\n\nimport androidx.annotation.ColorInt;\nimport androidx.annotation.Nullable;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport it.volta.ts.easymask.obj.FPoint;\nimport it.volta.ts.easymask.tools.ToolSelector;\n\npublic class MaskImage extends androidx.appcompat.widget.AppCompatImageView\n{\n    @ColorInt\n    int drawColor  = 0xffffff00;\n    int eraseColor = 0xffffffff;\n    int stroke;\n\n    private OnMaskTouch onMaskTouch;\n    private Bitmap eraseBitmap;\n\n    List<List<FPoint>> points;\n    List<FPoint>       track;\n\n    int width, height;\n    float fromX, fromY, toX, toY;\n    Paint drawPaint, erasePaint;\n\n    public MaskImage(Context context) {\n        super(context);\n        init();\n    }\n\n    public MaskImage(Context context, @Nullable AttributeSet attrs) {\n        super(context, attrs);\n        init();\n    }\n\n    public MaskImage(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init();\n    }\n\n    private void init()\n    {\n        points = new ArrayList<>();\n\n        drawPaint = new Paint();\n        drawPaint.setAntiAlias(true);\n        drawPaint.setStrokeCap(Paint.Cap.ROUND);\n        drawPaint.setColor(drawColor);\n\n        erasePaint = new Paint();\n        erasePaint.setAlpha(0);\n        erasePaint.setAntiAlias(true);\n        erasePaint.setStrokeCap(Paint.Cap.ROUND);\n        erasePaint.setColor(eraseColor);\n        erasePaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));\n\n\n\n        setOnTouchListener(onTouch);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)\n    {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        width  = MeasureSpec.getSize(widthMeasureSpec );\n        height = MeasureSpec.getSize(heightMeasureSpec);\n        stroke = width * 5 / 100;\n\n        drawPaint .setStrokeWidth(stroke);\n        erasePaint.setStrokeWidth(stroke);\n    }\n\n    OnTouchListener onTouch = new OnTouchListener() {\n        @Override\n        public boolean onTouch(View view, MotionEvent event)\n        {\n            float x = event.getX();\n            float y = event.getY();\n\n            switch(event.getAction())\n            {\n                case MotionEvent.ACTION_DOWN:\n                    fromX = x;\n                    fromY = y;\n                    track = new ArrayList<>();\n\n                    points.add(track);\n\n\n                    if (ToolSelector.toolState == 1)\n                    {\n                        track.add(new FPoint(x,y, false));\n                    } else {\n                        track.add(new FPoint(x,y, true));\n                    }\n                    if (onMaskTouch != null)\n                        onMaskTouch.onPoint(x,y);\n                    break;\n                case MotionEvent.ACTION_UP:\n                    if (ToolSelector.toolState != 1)\n                    {\n\n                    }\n                    //show();\n                    break;\n                case MotionEvent.ACTION_MOVE:\n                    toX = x;\n                    toY = y;\n\n                    fromX = x;\n                    fromY = y;\n                    if (ToolSelector.toolState == 1)\n                    {\n                        track.add(new FPoint(x,y, false));\n                    } else {\n                        track.add(new FPoint(x,y, true));\n                    }\n                    if (onMaskTouch != null)\n                        onMaskTouch.onPoint(x,y);\n\n                    break;\n            }\n\n            MaskImage.this.invalidate();\n            return true;\n\n        }\n    };\n\n    public void erase(Bitmap bitmap){\n        eraseBitmap = bitmap;\n        erasePaint = new Paint();\n        MaskImage.this.invalidate();\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas)\n    {\n        //super.onDraw(canvas);\n        for (int tdx=0; tdx < points.size(); tdx++)\n//        for (List<FPoint> track : points)\n        {\n            List<FPoint> track = points.get(tdx);\n\n            if (track.size() > 1) {\n                for (int idx = 1; idx < track.size(); idx++) {\n                    if(!(track.get(idx-1).eraser || track.get(idx).eraser)) {\n\n                        canvas.drawLine(track.get(idx - 1).x, track.get(idx - 1).y,\n                                track.get(idx).x, track.get(idx).y,\n                                drawPaint\n                                //(tdx % 2 == 0 ? drawPaint : erasePaint)\n                        );\n\n//                        if(eraseBitmap!=null){\n//                            erasePaint.setAlpha(0);\n//                            erasePaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_OUT));\n//                            canvas.drawBitmap(eraseBitmap, 0,0, erasePaint);\n//                        }\n                    }\n\n\n                    }\n\n                }\n            else {\n\n            }\n        }\n    }\n\n    //----------------------------------------------------------------------------------------------\n\n    public void setOnMaskTouch(OnMaskTouch onMaskTouch) {\n        this.onMaskTouch = onMaskTouch;\n    }\n\n    public interface OnMaskTouch\n    {\n        void onPoint(float x, float y);\n    }\n\n    //----------------------------------------------------------------------------------------------\n\n    /*\n    private void show()\n    {\n        System.out.println(\"--------------------\");\n        for (List<FPoint> track : points) {\n            System.out.println(\"New track\");\n            for (FPoint point : track)\n                System.out.println(\"    \" + (int)point.x + \", \" + (int)point.y);\n        }\n    }\n    */\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java b/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java
--- a/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java	(revision 38dba19764769eb03ca6f124d0ef02c23b9ccc82)
+++ b/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java	(date 1653985373386)
@@ -31,6 +31,8 @@
 
     List<List<FPoint>> points;
     List<FPoint>       track;
+    int position = 0;
+    List<FPoint>       trackToRedo;
 
     int width, height;
     float fromX, fromY, toX, toY;
@@ -99,7 +101,7 @@
                     track = new ArrayList<>();
 
                     points.add(track);
-
+                    position++;
 
                     if (ToolSelector.toolState == 1)
                     {
@@ -196,15 +198,18 @@
 
     //----------------------------------------------------------------------------------------------
 
-    /*
-    private void show()
-    {
-        System.out.println("--------------------");
-        for (List<FPoint> track : points) {
-            System.out.println("New track");
-            for (FPoint point : track)
-                System.out.println("    " + (int)point.x + ", " + (int)point.y);
+    public void undo () {
+        if (position > 0) {
+            trackToRedo = points.get(position-1);
+            points.remove(position-1);
+            position--;
+            MaskImage.this.invalidate();
         }
     }
-    */
+
+    public void redo () {
+        points.add(trackToRedo);
+        MaskImage.this.invalidate();
+        position++;
+    }
 }
Index: app/src/main/res/layout/activity_mask.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:background=\"@color/white\"\n    tools:context=\".activities.MaskActivity\">\n\n    <LinearLayout\n        android:id           =\"@+id/header\"\n        android:layout_width =\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation  =\"horizontal\"\n        android:gravity=\"end\"\n        >\n        <ImageView\n            android:layout_width=\"75dp\"\n            android:layout_height=\"50dp\"\n            android:src=\"@drawable/newlogoeasymask\"\n            android:layout_marginEnd=\"10dp\"\n            android:layout_marginTop=\"10dp\"\n            />\n        <ImageView\n            android:layout_width=\"90dp\"\n            android:layout_height=\"100dp\"\n            android:src=\"@drawable/logo\"\n            android:layout_marginEnd=\"5sp\"\n            android:layout_marginTop=\"-15sp\"\n            />\n\n    </LinearLayout>\n\n    <RelativeLayout\n        android:id           =\"@+id/image_layout\"\n        android:layout_width =\"400dp\"\n        android:layout_height=\"400dp\"\n        android:layout_below =\"@+id/header\"\n        android:layout_marginTop=\"10dp\"\n        android:layout_centerHorizontal=\"true\"\n        android:background=\"#80008000\"\n        android:layout_marginBottom=\"10dp\"\n        >\n        <!--RelativeLayout\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:id=\"@+id/layout\"\n            -->\n            <ImageView\n                android:id=\"@+id/imgSlot\"\n                android:layout_width =\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:layout_centerHorizontal=\"true\"\n                android:adjustViewBounds=\"true\"\n                android:scaleType=\"fitXY\"\n                android:src=\"@drawable/placeholder\"\n                />\n            <it.volta.ts.easymask.widgets.MaskImage\n                android:id=\"@+id/imgMask\"\n                android:layout_width =\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:layout_centerHorizontal=\"true\"\n                />\n\n            <it.volta.ts.easymask.widgets.MaskEraser\n                android:id=\"@+id/imgEraser\"\n                android:layout_width =\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:layout_centerHorizontal=\"true\"\n                />\n        <!--/RelativeLayout-->\n    </RelativeLayout>\n\n    <LinearLayout\n        android:id=\"@+id/buttons\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"50dp\"\n        android:orientation=\"horizontal\"\n        android:background=\"@drawable/toolbar\"\n        android:layout_above=\"@+id/btnUp\"\n        android:layout_centerHorizontal=\"true\"\n        android:gravity=\"center_horizontal\"\n        android:layout_marginBottom=\"15dp\"\n        >\n        <ImageView\n            android:id=\"@+id/brush\"\n            android:layout_width    =\"@dimen/mask_buttons_size\"\n            android:layout_height   =\"@dimen/mask_buttons_size\"\n            android:layout_marginEnd=\"@dimen/mask_buttons_mSE\"\n            android:src=\"@drawable/brush\"\n            android:hapticFeedbackEnabled=\"true\"\n            android:layout_marginTop=\"5dp\"\n            >\n        </ImageView>\n\n        <ImageView\n            android:id=\"@+id/eraser\"\n            android:layout_width       =\"@dimen/mask_buttons_size\"\n            android:layout_height      =\"@dimen/mask_buttons_size\"\n            android:layout_marginStart =\"@dimen/mask_buttons_mSE\"\n            android:src=\"@drawable/eraser\"\n            android:hapticFeedbackEnabled=\"true\"\n            android:layout_marginTop=\"5dp\"\n            >\n        </ImageView>\n    </LinearLayout>\n\n<!--    <ImageView-->\n<!--        android:id=\"@+id/btnSave\"-->\n<!--        android:layout_width=\"300sp\"-->\n<!--        android:layout_height=\"150sp\"-->\n<!--        android:layout_centerHorizontal=\"true\"-->\n<!--        android:layout_alignParentBottom=\"true\"-->\n<!--        android:layout_marginBottom=\"45sp\"-->\n<!--        android:src=\"@drawable/savebtn\"-->\n<!--        android:visibility=\"invisible\">-->\n<!--    </ImageView>-->\n\n    <ImageView\n        android:id=\"@+id/btnUp\"\n        android:layout_width =\"100dp\"\n        android:layout_height=\"50dp\"\n        android:layout_centerHorizontal =\"true\"\n        android:layout_alignParentBottom=\"true\"\n        android:src=\"@drawable/uploadbtn\"\n        android:hapticFeedbackEnabled=\"true\"\n        android:layout_marginBottom=\"15dp\"\n        >\n    </ImageView>\n\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_mask.xml b/app/src/main/res/layout/activity_mask.xml
--- a/app/src/main/res/layout/activity_mask.xml	(revision 38dba19764769eb03ca6f124d0ef02c23b9ccc82)
+++ b/app/src/main/res/layout/activity_mask.xml	(date 1653984526823)
@@ -77,18 +77,17 @@
         android:layout_width="match_parent"
         android:layout_height="50dp"
         android:orientation="horizontal"
-        android:background="@drawable/toolbar"
         android:layout_above="@+id/btnUp"
         android:layout_centerHorizontal="true"
         android:gravity="center_horizontal"
-        android:layout_marginBottom="15dp"
+        android:layout_marginBottom="35dp"
         >
         <ImageView
             android:id="@+id/brush"
-            android:layout_width    ="@dimen/mask_buttons_size"
-            android:layout_height   ="@dimen/mask_buttons_size"
+            android:layout_width    ="@dimen/mask_buttons_width"
+            android:layout_height   ="@dimen/mask_buttons_height"
             android:layout_marginEnd="@dimen/mask_buttons_mSE"
-            android:src="@drawable/brush"
+            android:src="@drawable/btnpenna"
             android:hapticFeedbackEnabled="true"
             android:layout_marginTop="5dp"
             >
@@ -96,10 +95,34 @@
 
         <ImageView
             android:id="@+id/eraser"
-            android:layout_width       ="@dimen/mask_buttons_size"
-            android:layout_height      ="@dimen/mask_buttons_size"
+            android:layout_width       ="@dimen/mask_buttons_width"
+            android:layout_height      ="@dimen/mask_buttons_height"
+            android:layout_marginStart ="@dimen/mask_buttons_mSE"
+            android:layout_marginEnd   ="@dimen/mask_buttons_mSE"
+            android:src="@drawable/btngomma"
+            android:hapticFeedbackEnabled="true"
+            android:layout_marginTop="5dp"
+            >
+        </ImageView>
+
+        <ImageView
+            android:id="@+id/undo"
+            android:layout_width       ="@dimen/mask_buttons_width"
+            android:layout_height      ="@dimen/mask_buttons_height"
+            android:layout_marginStart ="@dimen/mask_buttons_mSE"
+            android:layout_marginEnd   ="@dimen/mask_buttons_mSE"
+            android:src="@drawable/btnundo"
+            android:hapticFeedbackEnabled="true"
+            android:layout_marginTop="5dp"
+            >
+        </ImageView>
+
+        <ImageView
+            android:id="@+id/redo"
+            android:layout_width       ="@dimen/mask_buttons_width"
+            android:layout_height      ="@dimen/mask_buttons_height"
             android:layout_marginStart ="@dimen/mask_buttons_mSE"
-            android:src="@drawable/eraser"
+            android:src="@drawable/btnredo"
             android:hapticFeedbackEnabled="true"
             android:layout_marginTop="5dp"
             >
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_24_05_2022_08_13__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_05_2022_08_13__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_05_2022_08_13__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_05_2022_08_13__Changes_.xml	(revision 38dba19764769eb03ca6f124d0ef02c23b9ccc82)
+++ /dev/null	(revision 38dba19764769eb03ca6f124d0ef02c23b9ccc82)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_24_05_2022_08_13_[Changes]" date="1653372819122" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_05_2022_08_13_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 24/05/2022 08:13 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_24_05_2022_08_13_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_05_2022_08_13_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_05_2022_08_13_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_24_05_2022_08_13_[Changes]/shelved.patch	(revision 38dba19764769eb03ca6f124d0ef02c23b9ccc82)
+++ /dev/null	(revision 38dba19764769eb03ca6f124d0ef02c23b9ccc82)
@@ -1,17 +0,0 @@
-Index: .idea/gradle.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/gradle.xml b/.idea/gradle.xml
---- a/.idea/gradle.xml	(revision 9e028738ea3341cf24ff7fef91a13cfd533ca34c)
-+++ b/.idea/gradle.xml	(date 1653372767378)
-@@ -1,5 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-+  <component name="GradleMigrationSettings" migrationVersion="1" />
-   <component name="GradleSettings">
-     <option name="linkedExternalProjectsSettings">
-       <GradleProjectSettings>
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <dimen name=\"mask_buttons_size\">30.000dp</dimen>\n    <dimen name=\"mask_buttons_mSE\" >40.000dp</dimen>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
--- a/app/src/main/res/values/dimens.xml	(revision 38dba19764769eb03ca6f124d0ef02c23b9ccc82)
+++ b/app/src/main/res/values/dimens.xml	(date 1653984526831)
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <dimen name="mask_buttons_size">30.000dp</dimen>
-    <dimen name="mask_buttons_mSE" >40.000dp</dimen>
+    <dimen name="mask_buttons_width">80.000dp</dimen>
+    <dimen name="mask_buttons_height">40.000dp</dimen>
+    <dimen name="mask_buttons_mSE" >10.000dp</dimen>
 
 </resources>
\ No newline at end of file

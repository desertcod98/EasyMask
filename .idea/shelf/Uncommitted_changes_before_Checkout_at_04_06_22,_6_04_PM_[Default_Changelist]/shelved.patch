Index: app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.volta.ts.easymask.activities;\n\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.os.Bundle;\nimport android.view.HapticFeedbackConstants;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.RelativeLayout;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.target.CustomTarget;\nimport com.bumptech.glide.request.transition.Transition;\nimport com.google.android.material.slider.Slider;\n\nimport it.volta.ts.easymask.R;\nimport it.volta.ts.easymask.bean.Stats;\nimport it.volta.ts.easymask.tools.ToolSelector;\nimport it.volta.ts.easymask.util.GraphicUtil;\nimport it.volta.ts.easymask.widgets.MaskImage;\n\npublic class MaskActivity extends AppCompatActivity\n{\n    private ImageView downloadedImg, brush, eraser, undo, redo, btnUpload;\n    private MaskImage maskImage;\n    private RelativeLayout imageLayout;\n    private ImageView zoomIn, zoomOut;\n    private BitmapDrawable sourceImage;\n    private Slider slider;\n\n    private int screenHeight;\n    private int screenWidth;\n    private String url;\n    private int    maxHeight, maxWidth;\n    private int    imgHeight, imgWidth;\n    private int    newHeight, newWidth;\n\n    private final double maxHeightRatio = 0.6;\n    private final double maxWidthRatio  = 0.95;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_mask);\n\n        screenHeight = GraphicUtil.getScreenHeight(this);\n        screenWidth  = GraphicUtil.getScreenWidth(this);\n        maxHeight    = (int)(screenHeight * maxHeightRatio);\n        maxWidth     = (int)(screenWidth  * maxWidthRatio );\n\n        Bundle b = getIntent().getExtras();\n        url = b.getString(\"url\");\n        downloadedImg = findViewById(R.id.imgSlot     );\n        imageLayout   = findViewById(R.id.image_layout);\n\n        maskImage = findViewById(R.id.imgMask);\n        maskImage.setFocusable(true);\n\n        slider = findViewById(R.id.strokeSlider);\n        slider.addOnChangeListener(new Slider.OnChangeListener() {\n            @Override\n            public void onValueChange(@NonNull Slider slider, float value, boolean fromUser) {\n                maskImage.setStroke(value * 50);\n            }\n        });\n\n        loadImage(downloadedImg, url);\n\n        brush     = findViewById(R.id.brush );\n        eraser    = findViewById(R.id.eraser);\n        undo      = findViewById(R.id.undo);\n        redo      = findViewById(R.id.redo);\n        btnUpload = findViewById(R.id.btnUp );\n\n        brush.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                ToolSelector.toolState = 1;\n                brush.setColorFilter(0x50000000);\n                eraser.clearColorFilter();\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n            }\n        });\n\n        eraser.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                ToolSelector.toolState = 0;\n                eraser.setColorFilter(0x50000000);\n                brush.clearColorFilter();\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n            }\n        });\n\n        undo.setOnClickListener(view -> {\n            maskImage.undo();\n            view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n        });\n\n        redo.setOnClickListener(view -> {\n            maskImage.redo();\n            view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n        });\n\n        btnUpload.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n                Toast.makeText(MaskActivity.this, (\"Coverage percentage: \" + Stats.getDimensStats(downloadedImg.getWidth(), downloadedImg.getHeight(), maskImage) + \"%\"), Toast.LENGTH_SHORT).show();\n            }\n        });\n\n        zoomIn  = findViewById(R.id.zoom_in );\n        zoomOut = findViewById(R.id.zoom_out);\n        zoomIn .setOnClickListener(onZoom);\n        zoomOut.setOnClickListener(onZoom);\n    }\n\n    private void setDimens(int imgWidth, int imgHeight)\n    {\n        newHeight = imgHeight;\n        newWidth  = imgWidth;\n        float ratio;\n\n        if (imgWidth > imgHeight) {\n            ratio = (float) maxWidth / (float) imgWidth;\n\n        } else if (imgHeight > imgWidth){\n            ratio = (float) maxHeight / (float) imgHeight;\n        }else{\n            if(maxWidth>maxWidth)\n                 ratio = (float) maxHeight / (float) imgHeight;\n            else ratio = (float) maxWidth / (float) imgWidth;\n        }\n\n        newWidth  = (int)((float) imgWidth  * ratio);\n        newHeight = (int)((float) imgHeight * ratio);\n\n        GraphicUtil.applySize(imageLayout, newWidth, newHeight);\n    }\n\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n\n        int width  = downloadedImg.getWidth();\n        int height = downloadedImg.getHeight();\n    }\n\n    private void loadImage(ImageView view, String url)\n    {\n        Glide.with(this)\n                .asBitmap()\n                .load(url)\n                .into(new CustomTarget<Bitmap>() {\n                    @Override\n                    public void onResourceReady(Bitmap bitmap, Transition<? super Bitmap> transition) {\n                        imgWidth = bitmap.getWidth();\n                        imgHeight = bitmap.getHeight();\n                        view.setImageBitmap(bitmap);\n\n                        setDimens(imgWidth,imgHeight);\n                        Bitmap transBmp = Bitmap.createBitmap(imgWidth,imgHeight,Bitmap.Config.ARGB_8888);\n                        sourceImage = new BitmapDrawable(getResources(), bitmap);\n                        sourceImage.setAlpha(100);\n                        maskImage.setImageDrawable(sourceImage);\n                    }\n\n                    @Override\n                    public void onLoadCleared(@Nullable Drawable placeholder) {\n                    }\n                });\n    }\n\n    //-----------------------------------------------------------------------------------------\n\n\n    View.OnClickListener onZoom = new View.OnClickListener() {\n        @Override\n        public void onClick(View v)\n        {\n            v.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n\n            float scale = downloadedImg.getScaleX();\n\n            switch (v.getId()) {\n                case R.id.zoom_in:\n                    scale += 0.1f;\n                    break;\n                case R.id.zoom_out:\n                    if (downloadedImg.getScaleX() > 1f)\n                        scale -= 0.1f;\n                    break;\n            }\n\n//            System.out.println(maskImage.getStrokeWidthConst());\n//            maskImage.setStrokeWidth((1-(scale-1))*maskImage.getStrokeWidthConst());\n            downloadedImg.setScaleX(scale);\n            downloadedImg.setScaleY(scale);\n            maskImage    .setScaleX(scale);\n            maskImage    .setScaleY(scale);\n        }\n    };\n}\n
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java b/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java
--- a/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java	
+++ b/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java	
@@ -114,7 +114,9 @@
             @Override
             public void onClick(View view) {
                 view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
-                Toast.makeText(MaskActivity.this, ("Coverage percentage: " + Stats.getDimensStats(downloadedImg.getWidth(), downloadedImg.getHeight(), maskImage) + "%"), Toast.LENGTH_SHORT).show();
+                Bitmap dCache = Bitmap.createBitmap(view.getDrawingCache());
+
+                Toast.makeText(MaskActivity.this, ("Coverage percentage: " + Stats.getDimensStats(maskImage.getWidth(), maskImage.getHeight(), dCache) + "%"), Toast.LENGTH_SHORT).show();
             }
         });
 
Index: app/src/main/java/it/volta/ts/easymask/bean/Stats.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.volta.ts.easymask.bean;\n\nimport android.graphics.Bitmap;\nimport android.graphics.Color;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.widget.ImageView;\n\npublic class Stats {\n\n    public static int getDimensStats (int baseWidth, int baseHeight, ImageView overlay) {\n        Bitmap b = ((BitmapDrawable)overlay.getDrawable()).getBitmap();\n\n        int bmColoredPixels = calculateNonTraspPixels(b);\n\n        return ((bmColoredPixels) / (baseWidth * baseHeight)) * 100;\n    }\n\n    private static int calculateNonTraspPixels (Bitmap b) {\n        int pixelCounter = 0;\n\n        for (int idxW = 0; idxW < b.getWidth(); idxW++){\n            for (int idxH = 0; idxH < b.getHeight(); idxH++) {\n                if (b.getPixel(idxW, idxH) == 0x50ff0000)\n                    pixelCounter++;\n            }\n        }\n\n        return pixelCounter;\n    }\n\n}\n
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/bean/Stats.java b/app/src/main/java/it/volta/ts/easymask/bean/Stats.java
--- a/app/src/main/java/it/volta/ts/easymask/bean/Stats.java	
+++ b/app/src/main/java/it/volta/ts/easymask/bean/Stats.java	
@@ -3,29 +3,83 @@
 import android.graphics.Bitmap;
 import android.graphics.Color;
 import android.graphics.drawable.BitmapDrawable;
+import android.util.Log;
 import android.widget.ImageView;
 
+import androidx.annotation.ColorInt;
+
 public class Stats {
 
-    public static int getDimensStats (int baseWidth, int baseHeight, ImageView overlay) {
-        Bitmap b = ((BitmapDrawable)overlay.getDrawable()).getBitmap();
+    public static double getDimensStats (int baseWidth, int baseHeight, Bitmap overlay) {
+        //b = createTrimmedBitmap(b);
+
+        int bmColoredPixels = calculateNonTraspPixels(overlay);
 
-        int bmColoredPixels = calculateNonTraspPixels(b);
+        double percentage = ((bmColoredPixels) / (baseWidth * baseHeight)) * 100;
 
-        return ((bmColoredPixels) / (baseWidth * baseHeight)) * 100;
+        System.out.println("percentage: " + percentage);
+
+        return percentage;
     }
 
     private static int calculateNonTraspPixels (Bitmap b) {
         int pixelCounter = 0;
+//
+//        int[] pixels = new int[b.getWidth() * b.getHeight()];
+//        b.getPixels(pixels, 0, b.getWidth(), 0, 0, b.getWidth(), b.getHeight());
+
 
         for (int idxW = 0; idxW < b.getWidth(); idxW++){
             for (int idxH = 0; idxH < b.getHeight(); idxH++) {
-                if (b.getPixel(idxW, idxH) == 0x50ff0000)
+                if (b.getPixel(idxW, idxH) != Color.TRANSPARENT)
                     pixelCounter++;
             }
         }
+//        for (int idx = 0; idx < pixels.length; idx++)
+//        {
+////            String hexColor = "#" + Integer.toHexString(pixels[idx]).substring(2);
+//            if (pixels[idx] != Color.TRANSPARENT)
+//                pixelCounter++;
+//        }
+
 
         return pixelCounter;
     }
 
+    private static Bitmap createTrimmedBitmap(Bitmap bmp) {
+        int imgHeight = bmp.getHeight();
+        int imgWidth  = bmp.getWidth();
+        int smallX=0,largeX=imgWidth,smallY=0,largeY=imgHeight;
+        int left=imgWidth,right=imgWidth,top=imgHeight,bottom=imgHeight;
+        for(int i=0;i<imgWidth;i++)
+        {
+            for(int j=0;j<imgHeight;j++)
+            {
+                if(bmp.getPixel(i, j) != Color.TRANSPARENT){
+                    if((i-smallX)<left){
+                        left=(i-smallX);
+                    }
+                    if((largeX-i)<right)
+                    {
+                        right=(largeX-i);
+                    }
+                    if((j-smallY)<top)
+                    {
+                        top=(j-smallY);
+                    }
+                    if((largeY-j)<bottom)
+                    {
+                        bottom=(largeY-j);
+                    }
+                }
+            }
+        }
+        bmp=Bitmap.createBitmap(bmp,left,top,imgWidth-left-right, imgHeight-top-bottom);
+
+        return bmp;
+
+    }
+
 }
+
+
Index: app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.volta.ts.easymask.widgets;\n\nimport android.content.Context;\nimport android.graphics.Bitmap;\nimport android.graphics.Canvas;\nimport android.graphics.Paint;\nimport android.graphics.Path;\nimport android.graphics.PorterDuff;\nimport android.graphics.PorterDuffXfermode;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.util.AttributeSet;\nimport android.view.MotionEvent;\nimport android.view.View;\n\nimport androidx.annotation.ColorInt;\nimport androidx.annotation.Nullable;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Stack;\n\nimport it.volta.ts.easymask.obj.FPoint;\nimport it.volta.ts.easymask.obj.Track;\nimport it.volta.ts.easymask.tools.ToolSelector;\n\n/**\n * https://stackoverflow.com/questions/6650398/android-imageview-zoom-in-and-zoom-out\n */\n\npublic class MaskImage extends androidx.appcompat.widget.AppCompatImageView {\n    @ColorInt\n    private int drawColor = 0x50ff0000;\n\n    private float stroke = 50;\n\n    private List<Track> points;\n    private Track track;\n\n    private int position = 0;\n    private Stack<Track> pointsToRedo;\n    private Track trackToRedo;\n\n    private int width, height;\n    private float fromX, fromY, toX, toY;\n    private Paint drawPaint, erasePaint;\n    private int fingerCount;\n\n    public MaskImage(Context context) {\n        super(context);\n        init();\n    }\n\n    public MaskImage(Context context, @Nullable AttributeSet attrs) {\n        super(context, attrs);\n        init();\n    }\n\n    public MaskImage(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init();\n    }\n\n    private void init() {\n        points = new ArrayList<>();\n        pointsToRedo = new Stack<>();\n\n        drawPaint = new Paint();\n        drawPaint.setAntiAlias(false);\n        drawPaint.setStrokeCap(Paint.Cap.ROUND);\n        drawPaint.setStyle(Paint.Style.STROKE);\n        drawPaint.setColor(drawColor);\n        drawPaint.setStrokeWidth(stroke);\n\n        erasePaint = new Paint();\n        erasePaint.setAntiAlias(false);\n        erasePaint.setStrokeCap(Paint.Cap.ROUND);\n        erasePaint.setStyle(Paint.Style.STROKE);\n        erasePaint.setStrokeWidth(stroke);\n        erasePaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));\n\n        setLayerType(View.LAYER_TYPE_SOFTWARE, null);\n        setOnTouchListener(onTouch);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        width = MeasureSpec.getSize(widthMeasureSpec);\n        height = MeasureSpec.getSize(heightMeasureSpec);\n    }\n\n    OnTouchListener onTouch = new OnTouchListener() {\n        @Override\n        public boolean onTouch(View view, MotionEvent event) {\n            float x = event.getX();\n            float y = event.getY();\n\n            switch (event.getAction()) {\n                case MotionEvent.ACTION_DOWN:\n                    if (event.getPointerCount() == 1) {\n                        fromX = x;\n                        fromY = y;\n                        track = new Track();\n\n                        points.add(track);\n                        position++;\n\n                        if (ToolSelector.toolState == 1)\n                            track.setEraser(false);\n                        else track.setEraser(true);\n                        track.getTrackList().add(new FPoint(x, y));\n                        track.setStroke(stroke);\n                    }\n                    fingerCount = event.getPointerCount();\n                    break;\n                case MotionEvent.ACTION_UP:\n\n\n                    break;\n                case MotionEvent.ACTION_MOVE:\n                    if (event.getPointerCount() == 1) {\n                        toX = x;\n                        toY = y;\n\n                        fromX = x;\n                        fromY = y;\n                        if (ToolSelector.toolState == 1){\n                            track.setEraser(false);\n                        }\n                        else {\n                            track.setEraser(true);\n                        }\n                        track.getTrackList().add(new FPoint(x, y));\n                        track.setStroke(stroke);\n                    }\n                    else{\n                        if(fingerCount == 1){\n                            fingerCount = 2;\n                            points.remove(points.size()-1);\n                            position--;\n                        }\n\n                    }\n                    MaskImage.this.invalidate();\n\n\n            }\n            return true;\n        }\n    };\n\n    //----------------------------------------------------------------------------------------------\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        for (int tdx = 0; tdx < points.size(); tdx++) {\n            Track track = new Track();\n            track.setTrackList(points.get(tdx).getTrackList());\n\n            if (track != null && track.getTrackList().size() > 1) {\n                Path path = new Path();\n                for (int idx = 0; idx < track.getTrackList().size(); idx++) {\n                    if (idx == 0)\n                        path.moveTo(track.getTrackList().get(idx).x, track.getTrackList().get(idx).y);\n                    else path.lineTo(track.getTrackList().get(idx).x, track.getTrackList().get(idx).y);\n                }\n                drawPaint.setStrokeWidth(points.get(tdx).getStroke());\n                erasePaint.setStrokeWidth(points.get(tdx).getStroke());\n                canvas.drawPath(path, (points.get(tdx).isEraser() ? erasePaint : drawPaint));\n            }\n        }\n    }\n\n    public void undo() {\n        if (position > 0) {\n            trackToRedo = points.get(position - 1);\n            pointsToRedo.push(trackToRedo);\n            points.remove(position - 1);\n            position--;\n            MaskImage.this.invalidate();\n        }\n    }\n\n    public void setStrokeWidth(float strokeWidth) {\n        erasePaint.setStrokeWidth(strokeWidth);\n        drawPaint.setStrokeWidth(strokeWidth);\n    }\n\n    public float getStroke(){\n        return stroke;\n    }\n\n    public void setStroke(float stroke){\n        this.stroke = stroke;\n    }\n\n    public void redo() {\n        if(!(pointsToRedo.isEmpty())){\n            points.add(pointsToRedo.pop());\n            position++;\n        }\n        MaskImage.this.invalidate();\n\n    }\n\n}\n\n
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java b/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java
--- a/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java	
+++ b/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java	
@@ -30,7 +30,7 @@
 
 public class MaskImage extends androidx.appcompat.widget.AppCompatImageView {
     @ColorInt
-    private int drawColor = 0x50ff0000;
+    private int drawColor = 0x65ff0000;
 
     private float stroke = 50;
 
Index: app/src/main/res/layout/activity_mask.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:orientation=\"vertical\"\n    android:background=\"@color/white\"\n    tools:context=\".activities.MaskActivity\">\n\n    <LinearLayout\n        android:id           =\"@+id/header\"\n        android:layout_width =\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation  =\"horizontal\"\n        android:gravity=\"end\"\n        >\n        <ImageView\n            android:layout_width=\"75dp\"\n            android:layout_height=\"50dp\"\n            android:src=\"@drawable/newlogoeasymask\"\n            android:layout_marginEnd=\"10dp\"\n            android:layout_marginTop=\"10dp\"\n            />\n        <ImageView\n            android:layout_width=\"90dp\"\n            android:layout_height=\"100dp\"\n            android:src=\"@drawable/logo\"\n            android:layout_marginEnd=\"5sp\"\n            android:layout_marginTop=\"-15sp\"\n            />\n\n    </LinearLayout>\n\n    <RelativeLayout\n        android:id               =\"@+id/image_layout\"\n        android:layout_width     =\"400dp\"\n        android:layout_height    =\"400dp\"\n        android:layout_below     =\"@+id/header\"\n        android:layout_marginTop =\"35dp\"\n        android:layout_centerHorizontal=\"true\"\n        android:background       =\"#80008000\"\n        android:layout_marginBottom=\"10dp\"\n        android:splitMotionEvents=\"true\"\n        >\n        <!--RelativeLayout\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:id=\"@+id/layout\"\n            -->\n            <ImageView\n                android:id=\"@+id/imgSlot\"\n                android:layout_width =\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:layout_centerHorizontal=\"true\"\n                android:adjustViewBounds=\"true\"\n                android:scaleType=\"fitXY\"\n                android:src=\"@drawable/placeholder\"\n                />\n\n        <it.volta.ts.easymask.widgets.MaskImage\n            android:id=\"@+id/imgMask\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:layout_centerHorizontal=\"true\" />\n\n\n        <!--/RelativeLayout-->\n    </RelativeLayout>\n\n    <LinearLayout\n        android:id=\"@+id/buttons\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"50dp\"\n        android:orientation=\"horizontal\"\n        android:layout_above=\"@+id/btnUp\"\n        android:layout_centerHorizontal=\"true\"\n        android:gravity=\"center_horizontal\"\n        android:layout_marginBottom=\"35dp\"\n        >\n        <ImageView\n            android:id=\"@+id/brush\"\n            android:layout_width    =\"@dimen/mask_buttons_width\"\n            android:layout_height   =\"@dimen/mask_buttons_height\"\n            android:layout_marginEnd=\"@dimen/mask_buttons_mSE\"\n            android:src=\"@drawable/btnpenna\"\n            android:hapticFeedbackEnabled=\"true\"\n            android:layout_marginTop=\"5dp\"\n            >\n        </ImageView>\n\n        <ImageView\n            android:id=\"@+id/eraser\"\n            android:layout_width       =\"@dimen/mask_buttons_width\"\n            android:layout_height      =\"@dimen/mask_buttons_height\"\n            android:layout_marginStart =\"@dimen/mask_buttons_mSE\"\n            android:layout_marginEnd   =\"@dimen/mask_buttons_mSE\"\n            android:src=\"@drawable/btngomma\"\n            android:hapticFeedbackEnabled=\"true\"\n            android:layout_marginTop=\"5dp\"\n            >\n        </ImageView>\n\n        <ImageView\n            android:id=\"@+id/undo\"\n            android:layout_width       =\"@dimen/mask_buttons_width\"\n            android:layout_height      =\"@dimen/mask_buttons_height\"\n            android:layout_marginStart =\"@dimen/mask_buttons_mSE\"\n            android:layout_marginEnd   =\"@dimen/mask_buttons_mSE\"\n            android:src=\"@drawable/btnundo\"\n            android:hapticFeedbackEnabled=\"true\"\n            android:layout_marginTop=\"5dp\"\n            >\n        </ImageView>\n\n        <ImageView\n            android:id=\"@+id/redo\"\n            android:layout_width       =\"@dimen/mask_buttons_width\"\n            android:layout_height      =\"@dimen/mask_buttons_height\"\n            android:layout_marginStart =\"@dimen/mask_buttons_mSE\"\n            android:src=\"@drawable/btnredo\"\n            android:hapticFeedbackEnabled=\"true\"\n            android:layout_marginTop=\"5dp\"\n            >\n        </ImageView>\n\n\n    </LinearLayout>\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_marginBottom=\"150dp\"\n        >\n        <com.google.android.material.slider.Slider\n            android:layout_width=\"190dp\"\n            android:layout_height=\"wrap_content\"\n            android:id=\"@+id/strokeSlider\"\n            app:trackColor=\"#3880C8\"\n            app:thumbColor=\"@color/black\"\n            android:valueFrom=\"0.1\"\n            android:valueTo=\"2.0\"\n            android:value=\"1\"\n            android:stepSize=\"0.1\">\n        </com.google.android.material.slider.Slider>\n\n        <ImageView\n            android:id=\"@+id/zoom_in\"\n            android:layout_width    =\"@dimen/mask_buttons_width\"\n            android:layout_height   =\"@dimen/mask_buttons_height\"\n            android:layout_marginEnd =\"@dimen/mask_buttons_mSE\"\n            android:layout_marginStart=\"@dimen/mask_buttons_mSE\"\n            android:src=\"@drawable/btnzoomin\"\n            android:hapticFeedbackEnabled=\"true\"\n            />\n        <ImageView\n            android:id=\"@+id/zoom_out\"\n            android:layout_width    =\"@dimen/mask_buttons_width\"\n            android:layout_height   =\"@dimen/mask_buttons_height\"\n            android:layout_marginStart =\"@dimen/mask_buttons_mSE\"\n            android:src=\"@drawable/btnzoomout\"\n            android:hapticFeedbackEnabled=\"true\"\n            />\n\n    </LinearLayout>\n\n<!--    <ImageView-->\n<!--        android:id=\"@+id/btnSave\"-->\n<!--        android:layout_width=\"300sp\"-->\n<!--        android:layout_height=\"150sp\"-->\n<!--        android:layout_centerHorizontal=\"true\"-->\n<!--        android:layout_alignParentBottom=\"true\"-->\n<!--        android:layout_marginBottom=\"45sp\"-->\n<!--        android:src=\"@drawable/savebtn\"-->\n<!--        android:visibility=\"invisible\">-->\n<!--    </ImageView>-->\n\n    <ImageView\n        android:id=\"@+id/btnUp\"\n        android:layout_width =\"100dp\"\n        android:layout_height=\"50dp\"\n        android:layout_centerHorizontal =\"true\"\n        android:layout_alignParentBottom=\"true\"\n        android:src=\"@drawable/uploadbtn\"\n        android:hapticFeedbackEnabled=\"true\"\n        android:layout_marginBottom=\"15dp\"\n        >\n    </ImageView>\n\n</RelativeLayout>
===================================================================
diff --git a/app/src/main/res/layout/activity_mask.xml b/app/src/main/res/layout/activity_mask.xml
--- a/app/src/main/res/layout/activity_mask.xml	
+++ b/app/src/main/res/layout/activity_mask.xml	
@@ -62,7 +62,9 @@
             android:id="@+id/imgMask"
             android:layout_width="match_parent"
             android:layout_height="match_parent"
-            android:layout_centerHorizontal="true" />
+            android:layout_centerHorizontal="true"
+            android:background="@color/transparent"
+            />
 
 
         <!--/RelativeLayout-->

Index: app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.volta.ts.easymask.activities;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.view.HapticFeedbackConstants;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.request.target.CustomTarget;\r\nimport com.bumptech.glide.request.transition.Transition;\r\n\r\nimport it.volta.ts.easymask.R;\r\nimport it.volta.ts.easymask.tools.ToolSelector;\r\nimport it.volta.ts.easymask.util.GraphicUtil;\r\nimport it.volta.ts.easymask.widgets.MaskEraser;\r\nimport it.volta.ts.easymask.widgets.MaskImage;\r\n\r\npublic class MaskActivity extends AppCompatActivity\r\n{\r\n    ImageView downloadedImg, brush, eraser, btnUpload;\r\n    MaskImage maskImage;\r\n    MaskEraser maskEraser;\r\n//    RelativeLayout rel;\r\n    private int screenHeight;\r\n    private int screenWidth;\r\n    private String url;\r\n    private int maxHeight;\r\n    private int maxWidth;\r\n    private int imgHeight;\r\n    private int imgWidth;\r\n\r\n    private final double maxHeightRatio = 0.7;\r\n    private final double maxWidthRatio = 0.9;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_mask);\r\n        screenHeight = GraphicUtil.getScreenHeight(this);\r\n        screenWidth = GraphicUtil.getScreenWidth(this);\r\n        maxHeight = (int)(screenHeight *maxHeightRatio);\r\n        maxWidth = (int)(screenWidth*maxWidthRatio);\r\n        Bundle b = getIntent().getExtras();\r\n        url = b.getString(\"url\");\r\n        downloadedImg = findViewById(R.id.imgSlot);\r\n        loadImage(downloadedImg, url);\r\n\r\n\r\n\r\n\r\n        maskImage = findViewById(R.id.imgMask);\r\n        maskImage.setOnMaskTouch(onMaskTouch);\r\n\r\n\r\n\r\n        maskEraser = findViewById(R.id.imgEraser);\r\n        maskEraser.setOnMaskTouch(onMaskEraserTouch);\r\n        maskEraser.setMaskImage(maskImage);\r\n\r\n\r\n\r\n        brush = findViewById(R.id.brush);\r\n        eraser = findViewById(R.id.eraser);\r\n        btnUpload = findViewById(R.id.btnUp);\r\n\r\n        brush.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                ToolSelector.toolState = 1;\r\n                maskEraser.setEnabled(false);\r\n                maskImage.setEnabled(true);\r\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\r\n            }\r\n        });\r\n\r\n        eraser.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                ToolSelector.toolState = 0;\r\n                maskEraser.setEnabled(true);\r\n                maskImage.setEnabled(false);\r\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\r\n            }\r\n        });\r\n\r\n        btnUpload.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setDimens(int imgWidth, int imgHeight){\r\n        System.out.println(imgHeight+ imgWidth);\r\n        if((imgHeight*maxWidth)/imgWidth <= maxHeight){\r\n            downloadedImg.getLayoutParams().height = (imgHeight*maxWidth)/imgWidth;\r\n            downloadedImg.getLayoutParams().width = maxWidth;\r\n            maskImage.getLayoutParams().height = (imgHeight*maxWidth)/imgWidth;\r\n            maskImage.getLayoutParams().width = maxWidth;\r\n            maskEraser.getLayoutParams().height = (imgHeight*maxWidth)/imgWidth;\r\n            maskEraser.getLayoutParams().width = maxWidth;\r\n        }\r\n        else if((maxHeight*imgWidth)/imgHeight <= maxWidth){\r\n            downloadedImg.getLayoutParams().height = maxHeight;\r\n            downloadedImg.getLayoutParams().width = (maxHeight*imgWidth)/imgHeight;\r\n            maskImage.getLayoutParams().height = maxHeight;\r\n            maskImage.getLayoutParams().width = (maxHeight*imgWidth)/imgHeight;\r\n            maskEraser.getLayoutParams().height = maxHeight;\r\n            maskEraser.getLayoutParams().width = (maxHeight*imgWidth)/imgHeight;\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n\r\n        int width  = downloadedImg.getWidth();\r\n        int height = downloadedImg.getHeight();\r\n    }\r\n\r\n    private void loadImage(ImageView view, String url)\r\n    {\r\n        Glide.with(this)\r\n                .asBitmap()\r\n                .load(url)\r\n                .into(new CustomTarget<Bitmap>() {\r\n                    @Override\r\n                    public void onResourceReady(Bitmap bitmap, Transition<? super Bitmap> transition) {\r\n                        imgWidth = bitmap.getWidth();\r\n                        imgHeight = bitmap.getHeight();\r\n                        view.setImageBitmap(bitmap);\r\n                        setDimens(imgWidth,imgHeight);\r\n\r\n                        Bitmap transBmp = Bitmap.createBitmap(imgWidth,imgHeight,Bitmap.Config.ARGB_8888);\r\n                        BitmapDrawable drawable = new BitmapDrawable(getResources(), bitmap);\r\n                        drawable.setAlpha(100);\r\n                        maskImage.setImageDrawable(drawable);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onLoadCleared(@Nullable Drawable placeholder) {\r\n                    }\r\n                });\r\n    }\r\n\r\n    //-----------------------------------------------------------------------------------------\r\n\r\n\r\n    MaskEraser.OnMaskTouch onMaskEraserTouch = new MaskEraser.OnMaskTouch() {\r\n        @Override\r\n        public void onPoint(float x, float y) {\r\n\r\n        }\r\n    };\r\n\r\n\r\n    MaskImage.OnMaskTouch onMaskTouch = new MaskImage.OnMaskTouch()\r\n    {\r\n        @Override\r\n        public void onPoint(float x, float y) {\r\n            System.out.println(x + \", \" + y);\r\n        }\r\n    };\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java b/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java
--- a/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java	(revision b70ee19a4a15fd9cf66bc19ebfcf00032a6560bb)
+++ b/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java	(date 1653647521039)
@@ -7,6 +7,7 @@
 import android.view.HapticFeedbackConstants;
 import android.view.View;
 import android.widget.ImageView;
+import android.widget.RelativeLayout;
 
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
@@ -23,17 +24,16 @@
 
 public class MaskActivity extends AppCompatActivity
 {
-    ImageView downloadedImg, brush, eraser, btnUpload;
-    MaskImage maskImage;
-    MaskEraser maskEraser;
-//    RelativeLayout rel;
+    private ImageView downloadedImg, brush, eraser, btnUpload;
+    private MaskImage maskImage;
+    private MaskEraser maskEraser;
+    RelativeLayout imageLayout;
     private int screenHeight;
     private int screenWidth;
     private String url;
-    private int maxHeight;
-    private int maxWidth;
-    private int imgHeight;
-    private int imgWidth;
+    private int maxHeight, maxWidth;
+    private int imgHeight, imgWidth;
+    private int newHeight, newWidth;
 
     private final double maxHeightRatio = 0.7;
     private final double maxWidthRatio = 0.9;
@@ -42,32 +42,30 @@
     {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_mask);
+
         screenHeight = GraphicUtil.getScreenHeight(this);
-        screenWidth = GraphicUtil.getScreenWidth(this);
-        maxHeight = (int)(screenHeight *maxHeightRatio);
-        maxWidth = (int)(screenWidth*maxWidthRatio);
+        screenWidth  = GraphicUtil.getScreenWidth(this);
+        maxHeight    = (int)(screenHeight * maxHeightRatio);
+        maxWidth     = (int)(screenWidth  * maxWidthRatio );
+
         Bundle b = getIntent().getExtras();
         url = b.getString("url");
         downloadedImg = findViewById(R.id.imgSlot);
         loadImage(downloadedImg, url);
 
-
-
+        imageLayout = findViewById(R.id.image_layout);
 
         maskImage = findViewById(R.id.imgMask);
         maskImage.setOnMaskTouch(onMaskTouch);
 
-
-
         maskEraser = findViewById(R.id.imgEraser);
         maskEraser.setOnMaskTouch(onMaskEraserTouch);
         maskEraser.setMaskImage(maskImage);
 
 
-
-        brush = findViewById(R.id.brush);
-        eraser = findViewById(R.id.eraser);
-        btnUpload = findViewById(R.id.btnUp);
+        brush     = findViewById(R.id.brush );
+        eraser    = findViewById(R.id.eraser);
+        btnUpload = findViewById(R.id.btnUp );
 
         brush.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -97,24 +95,23 @@
         });
     }
 
-    private void setDimens(int imgWidth, int imgHeight){
-        System.out.println(imgHeight+ imgWidth);
-        if((imgHeight*maxWidth)/imgWidth <= maxHeight){
-            downloadedImg.getLayoutParams().height = (imgHeight*maxWidth)/imgWidth;
-            downloadedImg.getLayoutParams().width = maxWidth;
-            maskImage.getLayoutParams().height = (imgHeight*maxWidth)/imgWidth;
-            maskImage.getLayoutParams().width = maxWidth;
-            maskEraser.getLayoutParams().height = (imgHeight*maxWidth)/imgWidth;
-            maskEraser.getLayoutParams().width = maxWidth;
+    private void setDimens(int imgWidth, int imgHeight)
+    {
+        newHeight = imgHeight;
+        newWidth  = imgWidth;
+
+        if (imgWidth > imgHeight) {
+            float ratio = (float) maxWidth / (float) imgWidth;
+            newWidth  = (int)((float) imgWidth  * ratio);
+            newHeight = (int)((float) imgHeight * ratio);
+
+        } else {
+            float ratio = (float) maxHeight / (float) imgHeight;
+            newWidth  = (int)((float) imgWidth  * ratio);
+            newHeight = (int)((float) imgHeight * ratio);
         }
-        else if((maxHeight*imgWidth)/imgHeight <= maxWidth){
-            downloadedImg.getLayoutParams().height = maxHeight;
-            downloadedImg.getLayoutParams().width = (maxHeight*imgWidth)/imgHeight;
-            maskImage.getLayoutParams().height = maxHeight;
-            maskImage.getLayoutParams().width = (maxHeight*imgWidth)/imgHeight;
-            maskEraser.getLayoutParams().height = maxHeight;
-            maskEraser.getLayoutParams().width = (maxHeight*imgWidth)/imgHeight;
-        }
+
+        GraphicUtil.applySize(imageLayout, newWidth, newHeight);
     }
 
 
@@ -137,8 +134,9 @@
                         imgWidth = bitmap.getWidth();
                         imgHeight = bitmap.getHeight();
                         view.setImageBitmap(bitmap);
+
                         setDimens(imgWidth,imgHeight);
-
+                        //TODO Error: maskImage == null nella seconda scansione del qr
                         Bitmap transBmp = Bitmap.createBitmap(imgWidth,imgHeight,Bitmap.Config.ARGB_8888);
                         BitmapDrawable drawable = new BitmapDrawable(getResources(), bitmap);
                         drawable.setAlpha(100);
Index: app/src/main/res/layout/activity_mask.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:background=\"@color/white\"\r\n    tools:context=\".activities.MaskActivity\">\r\n\r\n    <ImageView\r\n        android:layout_width=\"100sp\"\r\n        android:layout_height=\"100sp\"\r\n        android:src=\"@drawable/logo\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_marginRight=\"5sp\"\r\n        android:layout_marginTop=\"-15sp\">\r\n    </ImageView>\r\n\r\n    <ImageView\r\n        android:layout_width=\"50sp\"\r\n        android:layout_height=\"50sp\"\r\n        android:src=\"@drawable/volta\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_marginRight=\"115sp\"\r\n        android:layout_marginTop=\"10sp\">\r\n    </ImageView>\r\n\r\n    <RelativeLayout\r\n        android:layout_width =\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:layout_marginBottom=\"200sp\"\r\n        android:layout_marginTop=\"100sp\"\r\n        android:id=\"@+id/layout\">\r\n        <!--RelativeLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:id=\"@+id/layout\"\r\n            -->\r\n            <ImageView\r\n                android:id=\"@+id/imgSlot\"\r\n                android:layout_width =\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:src=\"@drawable/placeholder\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                />\r\n            <it.volta.ts.easymask.widgets.MaskImage\r\n                android:id=\"@+id/imgMask\"\r\n                android:layout_width =\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                />\r\n\r\n            <it.volta.ts.easymask.widgets.MaskEraser\r\n                android:id=\"@+id/imgEraser\"\r\n                android:layout_width =\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                />\r\n        <!--/RelativeLayout-->\r\n    </RelativeLayout>\r\n\r\n    <ImageView\r\n        android:layout_width=\"400sp\"\r\n        android:layout_height=\"50sp\"\r\n        android:src=\"@drawable/toolbar\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginBottom=\"150sp\">\r\n    </ImageView>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/brush\"\r\n        android:layout_width=\"30sp\"\r\n        android:layout_height=\"30sp\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginBottom=\"160sp\"\r\n        android:layout_marginLeft=\"95sp\"\r\n        android:src=\"@drawable/brush\"\r\n        android:hapticFeedbackEnabled=\"true\">\r\n    </ImageView>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/eraser\"\r\n        android:layout_width=\"30sp\"\r\n        android:layout_height=\"30sp\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginBottom=\"160sp\"\r\n        android:layout_marginRight=\"95sp\"\r\n        android:src=\"@drawable/eraser\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:hapticFeedbackEnabled=\"true\">\r\n    </ImageView>\r\n\r\n<!--    <ImageView-->\r\n<!--        android:id=\"@+id/btnSave\"-->\r\n<!--        android:layout_width=\"300sp\"-->\r\n<!--        android:layout_height=\"150sp\"-->\r\n<!--        android:layout_centerHorizontal=\"true\"-->\r\n<!--        android:layout_alignParentBottom=\"true\"-->\r\n<!--        android:layout_marginBottom=\"45sp\"-->\r\n<!--        android:src=\"@drawable/savebtn\"-->\r\n<!--        android:visibility=\"invisible\">-->\r\n<!--    </ImageView>-->\r\n\r\n    <ImageView\r\n        android:id=\"@+id/btnUp\"\r\n        android:layout_width=\"300sp\"\r\n        android:layout_height=\"150sp\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:src=\"@drawable/uploadbtn\"\r\n        android:hapticFeedbackEnabled=\"true\">\r\n    </ImageView>\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_mask.xml b/app/src/main/res/layout/activity_mask.xml
--- a/app/src/main/res/layout/activity_mask.xml	(revision b70ee19a4a15fd9cf66bc19ebfcf00032a6560bb)
+++ b/app/src/main/res/layout/activity_mask.xml	(date 1653647346251)
@@ -27,12 +27,14 @@
     </ImageView>
 
     <RelativeLayout
+        android:id           ="@+id/image_layout"
         android:layout_width ="wrap_content"
         android:layout_height="wrap_content"
         android:layout_centerInParent="true"
         android:layout_marginBottom="200sp"
         android:layout_marginTop="100sp"
-        android:id="@+id/layout">
+        android:background="#80008000"
+        >
         <!--RelativeLayout
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
@@ -40,10 +42,12 @@
             -->
             <ImageView
                 android:id="@+id/imgSlot"
-                android:layout_width ="wrap_content"
-                android:layout_height="wrap_content"
+                android:layout_width ="match_parent"
+                android:layout_height="match_parent"
                 android:src="@drawable/placeholder"
                 android:layout_centerHorizontal="true"
+                android:adjustViewBounds="true"
+                android:scaleType="fitXY"
                 />
             <it.volta.ts.easymask.widgets.MaskImage
                 android:id="@+id/imgMask"

Index: app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.volta.ts.easymask.widgets;\n\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Paint;\nimport android.util.AttributeSet;\nimport android.view.MotionEvent;\nimport android.view.View;\n\nimport androidx.annotation.ColorInt;\nimport androidx.annotation.Nullable;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport it.volta.ts.easymask.obj.FPoint;\nimport it.volta.ts.easymask.tools.ToolSelector;\n\npublic class MaskImage extends androidx.appcompat.widget.AppCompatImageView\n{\n    @ColorInt\n    int drawColor = 0xffffff00;\n    int stroke;\n\n    private OnMaskTouch onMaskTouch;\n\n    List<List<FPoint>> points;\n    List<FPoint>       track;\n\n    int width, height;\n    float fromX, fromY, toX, toY;\n    Paint paint;\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)\n    {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        width  = MeasureSpec.getSize(widthMeasureSpec );\n        height = MeasureSpec.getSize(heightMeasureSpec);\n        stroke = width * 5 / 100;\n        paint.setStrokeWidth(stroke);\n    }\n\n    OnTouchListener onTouch = new OnTouchListener() {\n        @Override\n        public boolean onTouch(View view, MotionEvent event)\n        {\n            float x = event.getX();\n            float y = event.getY();\n\n            switch(event.getAction())\n            {\n                case MotionEvent.ACTION_DOWN:\n                    fromX = x;\n                    fromY = y;\n                    track = new ArrayList<>();\n\n                    points.add(track);\n\n\n                    if (ToolSelector.toolState == 1)\n                    {\n                        track.add(new FPoint(x,y, false));\n                    } else {\n                        track.add(new FPoint(x,y, true));\n                    }\n                    if (onMaskTouch != null)\n                        onMaskTouch.onPoint(x,y);\n                    break;\n                case MotionEvent.ACTION_UP:\n                    if (ToolSelector.toolState != 1)\n                    {\n\n                    }\n                    //show();\n                    break;\n                case MotionEvent.ACTION_MOVE:\n                    toX = x;\n                    toY = y;\n\n                    fromX = x;\n                    fromY = y;\n                    if (ToolSelector.toolState == 1)\n                    {\n                        track.add(new FPoint(x,y, false));\n                    } else {\n                        track.add(new FPoint(x,y, true));\n                    }\n                    if (onMaskTouch != null)\n                        onMaskTouch.onPoint(x,y);\n\n                    break;\n            }\n\n            MaskImage.this.invalidate();\n            return true;\n        }\n    };\n\n    @Override\n    protected void onDraw(Canvas canvas)\n    {\n        //super.onDraw(canvas);\n\n        for (List<FPoint> track : points)\n        {\n            if (track.size() > 1) {\n                for (int idx = 1; idx < track.size(); idx++) {\n                    if(!(track.get(idx-1).eraser || track.get(idx).eraser)) {\n\n                        paint.setColor(drawColor);\n                        canvas.drawLine(track.get(idx - 1).x, track.get(idx - 1).y,\n                                track.get(idx).x, track.get(idx).y,\n                                paint);\n                    }\n\n\n                    }\n\n                }\n             else {\n\n            }\n        }\n    }\n\n    //----------------------------------------------------------------------------------------------\n\n    public void setOnMaskTouch(OnMaskTouch onMaskTouch) {\n        this.onMaskTouch = onMaskTouch;\n    }\n\n    public interface OnMaskTouch\n    {\n        void onPoint(float x, float y);\n    }\n\n    //----------------------------------------------------------------------------------------------\n\n    public MaskImage(Context context) {\n        super(context);\n        init();\n    }\n\n    public MaskImage(Context context, @Nullable AttributeSet attrs) {\n        super(context, attrs);\n        init();\n    }\n\n    public MaskImage(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init();\n    }\n\n    private void init()\n    {\n        points = new ArrayList<>();\n\n        paint = new Paint();\n\n        paint.setAntiAlias(true);\n        paint.setStrokeCap(Paint.Cap.ROUND);\n\n        setBackgroundColor(0x00000000);\n        setOnTouchListener(onTouch);\n    }\n\n    /*\n    private void show()\n    {\n        System.out.println(\"--------------------\");\n        for (List<FPoint> track : points) {\n            System.out.println(\"New track\");\n            for (FPoint point : track)\n                System.out.println(\"    \" + (int)point.x + \", \" + (int)point.y);\n        }\n    }\n    */\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java b/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java
--- a/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java	
+++ b/app/src/main/java/it/volta/ts/easymask/widgets/MaskImage.java	
@@ -17,8 +17,7 @@
 import it.volta.ts.easymask.obj.FPoint;
 import it.volta.ts.easymask.tools.ToolSelector;
 
-public class MaskImage extends androidx.appcompat.widget.AppCompatImageView
-{
+public class MaskImage extends androidx.appcompat.widget.AppCompatImageView {
     @ColorInt
     int drawColor = 0xffffff00;
     int stroke;
@@ -26,17 +25,16 @@
     private OnMaskTouch onMaskTouch;
 
     List<List<FPoint>> points;
-    List<FPoint>       track;
+    List<FPoint> track;
 
     int width, height;
     float fromX, fromY, toX, toY;
     Paint paint;
 
     @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
-    {
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-        width  = MeasureSpec.getSize(widthMeasureSpec );
+        width = MeasureSpec.getSize(widthMeasureSpec);
         height = MeasureSpec.getSize(heightMeasureSpec);
         stroke = width * 5 / 100;
         paint.setStrokeWidth(stroke);
@@ -44,13 +42,11 @@
 
     OnTouchListener onTouch = new OnTouchListener() {
         @Override
-        public boolean onTouch(View view, MotionEvent event)
-        {
+        public boolean onTouch(View view, MotionEvent event) {
             float x = event.getX();
             float y = event.getY();
 
-            switch(event.getAction())
-            {
+            switch (event.getAction()) {
                 case MotionEvent.ACTION_DOWN:
                     fromX = x;
                     fromY = y;
@@ -59,18 +55,16 @@
                     points.add(track);
 
 
-                    if (ToolSelector.toolState == 1)
-                    {
-                        track.add(new FPoint(x,y, false));
+                    if (ToolSelector.toolState == 1) {
+                        track.add(new FPoint(x, y, false));
                     } else {
-                        track.add(new FPoint(x,y, true));
+                        track.add(new FPoint(x, y, true));
                     }
                     if (onMaskTouch != null)
-                        onMaskTouch.onPoint(x,y);
+                        onMaskTouch.onPoint(x, y);
                     break;
                 case MotionEvent.ACTION_UP:
-                    if (ToolSelector.toolState != 1)
-                    {
+                    if (ToolSelector.toolState != 1) {
 
                     }
                     //show();
@@ -81,14 +75,13 @@
 
                     fromX = x;
                     fromY = y;
-                    if (ToolSelector.toolState == 1)
-                    {
-                        track.add(new FPoint(x,y, false));
+                    if (ToolSelector.toolState == 1) {
+                        track.add(new FPoint(x, y, false));
                     } else {
-                        track.add(new FPoint(x,y, true));
+                        track.add(new FPoint(x, y, true));
                     }
                     if (onMaskTouch != null)
-                        onMaskTouch.onPoint(x,y);
+                        onMaskTouch.onPoint(x, y);
 
                     break;
             }
@@ -99,15 +92,13 @@
     };
 
     @Override
-    protected void onDraw(Canvas canvas)
-    {
+    protected void onDraw(Canvas canvas) {
         //super.onDraw(canvas);
 
-        for (List<FPoint> track : points)
-        {
+        for (List<FPoint> track : points) {
             if (track.size() > 1) {
                 for (int idx = 1; idx < track.size(); idx++) {
-                    if(!(track.get(idx-1).eraser || track.get(idx).eraser)) {
+                    if (!(track.get(idx - 1).eraser || track.get(idx).eraser)) {
 
                         paint.setColor(drawColor);
                         canvas.drawLine(track.get(idx - 1).x, track.get(idx - 1).y,
@@ -116,10 +107,9 @@
                     }
 
 
-                    }
+                }
 
-                }
-             else {
+            } else {
 
             }
         }
@@ -131,8 +121,7 @@
         this.onMaskTouch = onMaskTouch;
     }
 
-    public interface OnMaskTouch
-    {
+    public interface OnMaskTouch {
         void onPoint(float x, float y);
     }
 
@@ -153,8 +142,7 @@
         init();
     }
 
-    private void init()
-    {
+    private void init() {
         points = new ArrayList<>();
 
         paint = new Paint();
@@ -166,6 +154,7 @@
         setOnTouchListener(onTouch);
     }
 
+
     /*
     private void show()
     {
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:background=\"@color/white\"\n    tools:context=\".MainActivity\">\n\n    <ImageView\n        android:id=\"@+id/ImageLogo\"\n        android:layout_width=\"350sp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_marginTop=\"130sp\"\n        android:src=\"@drawable/logo\">\n    </ImageView>\n\n\n    <ImageView\n        android:id=\"@+id/ImageScritta\"\n        android:layout_width=\"450sp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_marginTop=\"-100sp\"\n        android:src=\"@drawable/scrittamain\">\n    </ImageView>\n\n    <ImageView\n        android:id=\"@+id/btnAct\"\n        android:layout_width=\"150sp\"\n        android:layout_height=\"150sp\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_marginBottom=\"50sp\"\n        android:src=\"@drawable/btnqr\">\n    </ImageView>\n\n\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	
+++ b/app/src/main/res/layout/activity_main.xml	
@@ -10,22 +10,12 @@
 
     <ImageView
         android:id="@+id/ImageLogo"
-        android:layout_width="350sp"
-        android:layout_height="wrap_content"
+        android:layout_width="300sp"
+        android:layout_height="300sp"
         android:layout_centerHorizontal="true"
-        android:layout_marginTop="130sp"
+        android:layout_marginTop="30sp"
         android:src="@drawable/logo">
     </ImageView>
-
-
-    <ImageView
-        android:id="@+id/ImageScritta"
-        android:layout_width="450sp"
-        android:layout_height="wrap_content"
-        android:layout_centerHorizontal="true"
-        android:layout_marginTop="-100sp"
-        android:src="@drawable/scrittamain">
-    </ImageView>
 
     <ImageView
         android:id="@+id/btnAct"
Index: app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.volta.ts.easymask.activities;\n\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.Drawable;\nimport android.os.Bundle;\nimport android.view.HapticFeedbackConstants;\nimport android.view.View;\nimport android.widget.ImageView;\nimport android.widget.RelativeLayout;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.target.CustomTarget;\nimport com.bumptech.glide.request.target.Target;\nimport com.bumptech.glide.request.transition.Transition;\n\nimport it.volta.ts.easymask.R;\nimport it.volta.ts.easymask.tools.ToolSelector;\nimport it.volta.ts.easymask.widgets.MaskEraser;\nimport it.volta.ts.easymask.widgets.MaskImage;\n\nimport android.widget.RelativeLayout.LayoutParams;\nimport android.view.View;\n\npublic class MaskActivity extends AppCompatActivity\n{\n    ImageView downloadedImg, brush, eraser, btnUpload;\n    MaskImage maskImage;\n    MaskEraser maskEraser;\n    RelativeLayout rel;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_mask);\n\n        Bundle b = getIntent().getExtras();\n        String url = b.getString(\"url\");\n        downloadedImg = findViewById(R.id.imgSlot);\n        Glide.with(this).load(url).into(downloadedImg);\n\n        rel = findViewById(R.id.layout);\n\n        Glide.with(this)\n                .asBitmap()\n                .load(url)\n                .into(new CustomTarget<Bitmap>() {\n                    @Override\n                    public void onResourceReady(Bitmap bitmap, Transition<? super Bitmap> transition) {\n                        int w = bitmap.getWidth();\n                        int h = bitmap.getHeight();\n                        LayoutParams params = new LayoutParams(w, h);\n                        rel.setLayoutParams(params);\n                    }\n\n                    @Override\n                    public void onLoadCleared(@Nullable Drawable placeholder) {\n\n                    }\n                });\n\n        maskImage = findViewById(R.id.imgMask);\n        maskImage.setOnMaskTouch(onMaskTouch);\n        maskEraser = findViewById(R.id.imgMaskEraser);\n        maskEraser.setOnMaskTouch(onMaskEraserTouch);\n\n        brush = findViewById(R.id.brush);\n        eraser = findViewById(R.id.eraser);\n        btnUpload = findViewById(R.id.btnUp);\n\n        brush.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                ToolSelector.toolState = 1;\n                maskEraser.setEnabled(false);\n                maskImage.setEnabled(true);\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n            }\n        });\n\n        eraser.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                ToolSelector.toolState = 0;\n                maskEraser.setEnabled(true);\n                maskImage.setEnabled(false);\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n            }\n        });\n\n        btnUpload.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                view.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);\n            }\n        });\n    }\n\n    //-----------------------------------------------------------------------------------------\n\n\n    MaskEraser.OnMaskTouch onMaskEraserTouch = new MaskEraser.OnMaskTouch() {\n        @Override\n        public void onPoint(float x, float y) {\n\n        }\n    };\n\n\n    MaskImage.OnMaskTouch onMaskTouch = new MaskImage.OnMaskTouch()\n    {\n        @Override\n        public void onPoint(float x, float y) {\n            System.out.println(x + \", \" + y);\n        }\n    };\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java b/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java
--- a/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java	
+++ b/app/src/main/java/it/volta/ts/easymask/activities/MaskActivity.java	
@@ -3,18 +3,19 @@
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
+import android.util.DisplayMetrics;
 import android.view.HapticFeedbackConstants;
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.RelativeLayout;
 
+import androidx.annotation.ColorInt;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.request.target.CustomTarget;
-import com.bumptech.glide.request.target.Target;
 import com.bumptech.glide.request.transition.Transition;
 
 import it.volta.ts.easymask.R;
@@ -23,7 +24,6 @@
 import it.volta.ts.easymask.widgets.MaskImage;
 
 import android.widget.RelativeLayout.LayoutParams;
-import android.view.View;
 
 public class MaskActivity extends AppCompatActivity
 {
@@ -118,7 +118,4 @@
             System.out.println(x + ", " + y);
         }
     };
-
-
-
 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"DesignSurface\">\n    <option name=\"filePathToZoomLevelMap\">\n      <map>\n        <entry key=\"../../../../../layout/custom_preview.xml\" value=\"0.1879432624113475\" />\n        <entry key=\"..\\:/Users/quercioli.edoardo/Documents/GitHub/EasyMask/app/src/main/res/layout/activity_main.xml\" value=\"0.15450861195542046\" />\n        <entry key=\"..\\:/Users/quercioli.edoardo/Documents/GitHub/EasyMask/app/src/main/res/layout/activity_mask.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/quercioli.edoardo/Documents/GitHub/EasyMask/app/src/main/res/layout/activity_qr_capture.xml\" value=\"0.16236068895643363\" />\n        <entry key=\"app/src/main/res/layout/activity_main.xml\" value=\"0.375\" />\n        <entry key=\"app/src/main/res/layout/activity_mask.xml\" value=\"0.33055555555555555\" />\n        <entry key=\"app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\" value=\"0.193\" />\n      </map>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -5,9 +5,9 @@
       <map>
         <entry key="../../../../../layout/custom_preview.xml" value="0.1879432624113475" />
         <entry key="..\:/Users/quercioli.edoardo/Documents/GitHub/EasyMask/app/src/main/res/layout/activity_main.xml" value="0.15450861195542046" />
-        <entry key="..\:/Users/quercioli.edoardo/Documents/GitHub/EasyMask/app/src/main/res/layout/activity_mask.xml" value="0.1" />
+        <entry key="..\:/Users/quercioli.edoardo/Documents/GitHub/EasyMask/app/src/main/res/layout/activity_mask.xml" value="0.16236068895643363" />
         <entry key="..\:/Users/quercioli.edoardo/Documents/GitHub/EasyMask/app/src/main/res/layout/activity_qr_capture.xml" value="0.16236068895643363" />
-        <entry key="app/src/main/res/layout/activity_main.xml" value="0.375" />
+        <entry key="app/src/main/res/layout/activity_main.xml" value="0.25" />
         <entry key="app/src/main/res/layout/activity_mask.xml" value="0.33055555555555555" />
         <entry key="app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml" value="0.193" />
       </map>
